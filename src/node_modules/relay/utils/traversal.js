export default function traversal(tree, cb) {
  if (!tree) {
    return
  }

  if (Array.isArray(tree)) {
    tree = tree.map(node => traversal(node, cb))

  } else if (typeof tree === 'object') {
    tree = Object.keys(tree)
      .reduce((acc, key) => {
        const node = tree[key]

        if (typeof node === 'object') {
          acc[key] = traversal(node, cb)
        } else {
          acc[key] = node
        }

        return acc
      }, {})
  }

  tree = cb(tree) || tree

  return tree
}
